from asyncio import current_task

from sqlalchemy.orm import Session
from telebot import TeleBot
from telebot.types import Message

from models import Chain, Team, Task


def register_quest_commands(bot: TeleBot, session: Session):
    # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ª–∏–¥–µ—Ä–∞ –∫ –∫–æ–º–∞–Ω–¥–µ
    @bot.message_handler(commands=['join'])
    def join_team(message: Message):
        team = session.query(Team).filter_by(leader_id=message.from_user.id).first()
        if team:
            bot.reply_to(message,
                         f'ü§© –í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ "{team.team_name}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /task –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è')
            return

        msg = bot.reply_to(message, '‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ:')
        bot.register_next_step_handler(msg, process_team_join)

    def process_team_join(message: Message):
        code_word = message.text
        team = session.query(Team).filter_by(code_word=code_word).first()
        if not team:
            bot.reply_to(message, '‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
            return

        if team.leader_id and team.leader_id != message.from_user.id:
            bot.reply_to(message, '‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ª–∏–¥–µ—Ä!')
            return
        else:
            team.leader_id = message.from_user.id
            session.commit()
            bot.reply_to(message, team.welcome_message or '‚úÖ –í—ã —Å—Ç–∞–ª–∏ –ª–∏–¥–µ—Ä–æ–º –∫–æ–º–∞–Ω–¥—ã!')

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
        current_chain = preprocess_task(message)
        if not current_chain:
            return
        send_task(message, current_chain.task)

    def preprocess_task(message: Message):
        team = session.query(Team).filter_by(leader_id=message.from_user.id).first()
        if not team:
            bot.reply_to(message, '‚ùå –í—ã –Ω–µ –ª–∏–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã!')
            return

        current_chain = session.query(Chain).filter_by(team_id=team.id, order=team.current_chain_order).first()
        if current_chain:
            if team.current_chain_order == 0:
                task_assist_message = 'ü•π –í–æ—Ç –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ:'
            else:
                task_assist_message = 'ü•π –í–æ—Ç –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ:'
            bot.send_message(message.chat.id, task_assist_message)
        else:
            bot.send_message(message.chat.id, 'ü•≤ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π.')
        return current_chain

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    def send_task(message: Message, task: Task):
        chat_id = message.chat.id

        bot.send_message(chat_id, f'*{task.task_name}*\n{task.description}')
        if task.photo:
            bot.send_photo(chat_id, task.photo, caption=task.description)
        if task.animation:
            bot.send_animation(chat_id, task.animation)
        if task.sticker:
            bot.send_sticker(chat_id, task.sticker)
        if task.location:
            bot.send_message(chat_id, f'üìç –õ–æ–∫–∞—Ü–∏—è: {task.location}')

    @bot.message_handler(commands=['task'])
    def get_task(message: Message):
        current_chain = preprocess_task(message)
        if not current_chain:
            return
        send_task(message, current_chain.task)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é
    @bot.message_handler(commands=['next'])
    def next_task(message: Message):
        team = session.query(Team).filter_by(leader_id=message.from_user.id).first()
        if not team:
            bot.reply_to(message, '‚ùå –í—ã –Ω–µ –ª–∏–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã!')
            return

        current_chain = session.query(Chain).filter_by(team_id=team.id, order=team.current_chain_order).first()
        if not current_chain:
            bot.reply_to(message, '‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π!')
            return

        msg = bot.reply_to(message, 'üî¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è:')
        bot.register_next_step_handler(msg, check_task_code, team, current_chain.task)

    def check_task_code(message: Message, team: Team, current_team_task: Task):
        if message.text != current_team_task.code_word:
            bot.reply_to(message, '‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ!')
            return

        team.current_chain_order += 1
        session.commit()

        next_chain = session.query(Chain).filter_by(team_id=team.id, order=team.current_chain_order).first()
        if next_chain:
            bot.reply_to(message, 'ü•π –í–æ—Ç –≤–∞—à–µ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ:')
            send_task(message, next_chain.task)
        else:
            bot.reply_to(message, team.final_message or 'üéâ –ö–≤–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω!')
